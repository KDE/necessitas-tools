diff --git a/build/tools/build-host-gdb.sh b/build/tools/build-host-gdb.sh
index 2c3f91c..0abcbb7 100755
--- a/build/tools/build-host-gdb.sh
+++ b/build/tools/build-host-gdb.sh
@@ -166,6 +166,152 @@ need_build_expat ()
     bh_stamps_do host-expat-$1 build_expat $1
 }
 
+# For gdb --tui on Windows, ncurses or PDCurses is needed. So far, I've been
+# unable to get ncurses (5.9 or 5.9-20130126) to work despite a trying a lot
+# of different configure options. --disable-database and --with-fallbacks is
+# probably the closest to working as it'll avoid the need for a share folder
+# full of terminfo definitions; instead linking them statically. By contrast
+# PDCurses worked first time! I would prefer to use ncurses though.
+WIN_CURSES_USE_IMPLEMENTATION=pdcurses # or ncurses
+WIN_CURSES_AVOID_SHARE_FOLDER=yes
+WIN_CURSES_NCURSES_VER=5.9 # or latest
+
+# $1: host system tag
+# 5.9 was released on 4-4-2011, but there's been a lot of fixes since then:
+# http://invisible-island.net/ncurses/NEWS.html
+
+# http://invisible-island.net/datafiles/current/ncurses.tar.gz
+build_ncurses ()
+{
+    if [ "$WIN_CURSES_NCURSES_VER" = "latest" ]; then
+        local VER=-5.9-20130126
+        local NCURSES_URL=ftp://invisible-island.net/ncurses/current
+        local EXT=tgz
+    else
+        local VER=-${WIN_CURSES_NCURSES_VER}
+        local NCURSES_URL=http://ftp.gnu.org/pub/gnu/ncurses
+        local EXT=tar.gz
+    fi
+
+    local ARGS
+    local SRCDIR=$TOOLCHAIN_SRC_DIR/ncurses
+    local BUILDDIR=$BH_BUILD_DIR/build-ncurses${VER}-$1
+    local INSTALLDIR=$BH_BUILD_DIR/install-host-$1
+
+    prepare_download
+    mkdir -p ${SRCDIR}
+    download_file ${NCURSES_URL}/ncurses${VER}.${EXT} ${SRCDIR}/ncurses${VER}.${EXT}
+    tar -xzf ${SRCDIR}/ncurses${VER}.${EXT} -C ${SRCDIR}
+
+    WIDE=no
+
+    ARGS="      --prefix=$INSTALLDIR"
+    if [ "$WIDE" = "yes" ]; then
+        ARGS=$ARGS" --enable-widec"
+    fi
+    ARGS=$ARGS" --disable-shared --enable-static"
+    ARGS=$ARGS" --without-debug"
+    ARGS=$ARGS" --build=$BH_BUILD_CONFIG"
+    ARGS=$ARGS" --host=$BH_HOST_CONFIG"
+    ARGS=$ARGS" --enable-term-driver"
+    ARGS=$ARGS" --enable-sp-funcs"
+    if [ "$WIN_CURSES_AVOID_SHARE_FOLDER" = "yes" ]; then
+        ARGS=$ARGS" --disable-database"
+        ARGS=$ARGS" --with-fallbacks=Eterm,cygwin,linux,rxvt,rxvt-unicode,screen,screen-256color,vt100,xterm,xterm-color,xterm-256color,pcansi,ansi,dumb,putty,putty-256color"
+    fi
+    ARGS=$ARGS" CFLAGS=-D__USE_MINGW_ANSI_STDIO=1"
+
+    TEXT="$(bh_host_text) ncurses:"
+
+    mkdir -p "$BUILDDIR" && rm -rf "$BUILDDIR"/* &&
+    cd "$BUILDDIR" &&
+    dump "$TEXT Building"
+    run2 "$SRCDIR"/ncurses${VER}/configure $ARGS &&
+    run2 make -j$NUM_JOBS &&
+    run2 make -j$NUM_JOBS install
+
+    # After http://www.linuxfromscratch.org/lfs/view/development/chapter06/ncurses.html
+    if [ "$WIDE" = "yes" -a ! -f libncurses.a ]; then
+    (
+    cd "$INSTALLDIR"/lib
+    for lib in ncurses form panel menu ; do
+        rm -vf lib${lib}.a
+        ln -sfv lib${lib}w.a lib${lib}.a
+    done
+    cd "$INSTALLDIR"/include
+    ln -sfv ncursesw ncurses
+    )
+    fi
+
+}
+
+need_build_ncurses ()
+{
+    bh_stamps_do host-ncurses-$1 build_ncurses $1
+}
+
+install_ncurses ()
+{
+    bh_stamps_do host-ncurses-$1 build_ncurses $1
+
+    local INSTALLDIR=$BH_BUILD_DIR/install-host-$1
+    local FINALINSTALLDIR=$(gdb_build_install_dir $1 $2 $3) # We need to copy the share folder from INSTALLDIR to FINALINSTALLDIR
+    if [ "$WIN_CURSES_AVOID_SHARE_FOLDER" = "no" ]; then
+        (
+        if [ ! -d $FINALINSTALLDIR/share/gdb ]; then
+            mkdir -p $FINALINSTALLDIR/share/gdb
+        fi
+        cp -rf "$INSTALLDIR"/share/terminfo "$FINALINSTALLDIR"/share/gdb
+        cp -rf "$INSTALLDIR"/share/tabset   "$FINALINSTALLDIR"/share/gdb
+        )
+    fi
+}
+
+need_install_ncurses ()
+{
+    bh_stamps_do host-install-ncurses-$1-$2-$3 install_ncurses $1 $2 $3
+}
+
+# $1: host system tag
+build_pdcurses ()
+{
+    local VER=3.4
+    local ARGS
+    local SRCDIR=$TOOLCHAIN_SRC_DIR/PDCurses
+    local BUILDDIR=$BH_BUILD_DIR/build-pdcurses-$VER-$1
+    local INSTALLDIR=$BH_BUILD_DIR/install-host-$1
+
+    mkdir -p ${INSTALLDIR}/include
+    mkdir -p ${INSTALLDIR}/lib
+
+    prepare_download
+    mkdir -p ${SRCDIR}
+    download_file http://downloads.sourceforge.net/pdcurses/pdcurses/${VER}/PDCurses-${VER}.tar.gz ${SRCDIR}/PDCurses-${VER}.tar.gz
+    tar -xzf ${SRCDIR}/PDCurses-${VER}.tar.gz -C ${SRCDIR}
+    mkdir -p "$BUILDDIR" &&
+    cp -rf ${SRCDIR}/PDCurses-${VER} ${BUILDDIR} &&
+    dump "$TEXT Building"
+
+    (
+    cd ${BUILDDIR}/PDCurses-${VER}/win32
+    sed '90s/-copy/-cp/' < mingwin32.mak > mingwin32-fixed.mak
+    # AR isn't used in the below!
+    make -f mingwin32-fixed.mak WIDE=Y UTF8=Y DLL=N CC="$CC" CXX="$CXX" AR="$AR" RANLIB="$RANLIB"
+    $RANLIB pdcurses.a
+    cp pdcurses.a ${INSTALLDIR}/lib/libncurses.a
+    cp pdcurses.a ${INSTALLDIR}/lib/libpanel.a
+    sed 's/\#define PDC_BUILD 3401/\#define PDC_BUILD 3401\n#define _ISPAD 0x10/' < ../curses.h > ../curses.fixed.h
+    sed 's/\#define PDC_BUILD 3401/\#define PDC_BUILD 3401\n#define _ISPAD 0x10/' < ../panel.h > ../panel.fixed.h
+    cp ../curses.fixed.h ${INSTALLDIR}/include/ncurses.h
+    cp ../panel.fixed.h ${INSTALLDIR}/include/panel.h
+    )
+}
+
+need_build_pdcurses ()
+{
+    bh_stamps_do host-pdcurses-$1 build_pdcurses $1
+}
+
 # $1: host system tag
 # $2: target tag
 # $3: gdb version
@@ -188,6 +334,7 @@ build_host_gdb ()
 
     ARGS=" --prefix=$INSTALLDIR"
     ARGS=$ARGS" --disable-shared"
+    ARGS=$ARGS" --enable-tui"
     ARGS=$ARGS" --build=$BH_BUILD_CONFIG"
     ARGS=$ARGS" --host=$BH_HOST_CONFIG"
     ARGS=$ARGS" --target=$(bh_tag_to_config_triplet $2)"
@@ -204,6 +351,18 @@ build_host_gdb ()
             CXXFLAGS=$CXXFLAGS" -D__USE_MINGW_ANSI_STDIO=1"
         fi
     fi
+
+    if [ $1 = windows-x86 -o $1 = windows-x86_64 ]; then
+        if [ "$WIN_CURSES_USE_IMPLEMENTATION" = "pdcurses" ]; then
+            need_build_pdcurses $1
+        else
+            need_install_ncurses $1 $2 $3
+        fi
+    fi
+
+    # Needed for ncurses or PDCurses.
+    CFLAGS=$CFLAGS"   -I${BH_BUILD_DIR}/install-host-$1/include -L${BH_BUILD_DIR}/install-host-$1/lib"
+
     TEXT="$(bh_host_text) gdb-$BH_TARGET_ARCH-$3:"
 
     mkdir -p "$BUILDDIR" && rm -rf "$BUILDDIR"/* &&
diff --git a/build/tools/toolchain-patches/gdb/0001-disable-windows-termcap-if-enable-tui.patch b/build/tools/toolchain-patches/gdb/0001-disable-windows-termcap-if-enable-tui.patch
new file mode 100644
index 0000000..8f099f5
--- /dev/null
+++ b/build/tools/toolchain-patches/gdb/0001-disable-windows-termcap-if-enable-tui.patch
@@ -0,0 +1,34 @@
+diff -urN a/gdb-7.3.x/gdb/configure b/gdb-7.3.x/gdb/configure
+--- a/gdb-7.3.x/gdb/configure	2013-01-28 22:50:00.404289961 +0000
++++ b/gdb-7.3.x/gdb/configure	2013-01-28 22:55:25.028070996 +0000
+@@ -9752,8 +9752,10 @@
+     ac_cv_search_tgetent="none required"
+     ;;
+   *mingw32*)
+-    ac_cv_search_tgetent="none required"
+-    CONFIG_OBS="$CONFIG_OBS windows-termcap.o"
++    if test x"$enable_tui" = xno; then
++      ac_cv_search_tgetent="none required"
++      CONFIG_OBS="$CONFIG_OBS windows-termcap.o"
++    fi
+     ;;
+ esac
+ 
+diff -urN a/gdb-7.3.x/gdb/configure.ac b/gdb-7.3.x/gdb/configure.ac
+--- a/gdb-7.3.x/gdb/configure.ac	2013-01-28 22:49:59.825285005 +0000
++++ b/gdb-7.3.x/gdb/configure.ac	2013-01-28 22:55:25.023070953 +0000
+@@ -557,9 +557,11 @@
+   go32* | *djgpp*)
+     ac_cv_search_tgetent="none required"
+     ;;
+-  *mingw32*)	 
+-    ac_cv_search_tgetent="none required"
+-    CONFIG_OBS="$CONFIG_OBS windows-termcap.o"
++  *mingw32*)
++    if test x"$enable_tui" = xno; then
++      ac_cv_search_tgetent="none required"
++      CONFIG_OBS="$CONFIG_OBS windows-termcap.o"
++    fi
+     ;;
+ esac
+ 
